"use strict";(self.webpackChunkwiki_base=self.webpackChunkwiki_base||[]).push([[3534],{3905:(e,t,r)=>{r.d(t,{Zo:()=>f,kt:()=>d});var o=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=o.createContext({}),c=function(e){var t=o.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},f=function(e){var t=c(e.components);return o.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},p=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,s=e.parentName,f=l(e,["components","mdxType","originalType","parentName"]),p=c(r),d=n,m=p["".concat(s,".").concat(d)]||p[d]||u[d]||a;return r?o.createElement(m,i(i({ref:t},f),{},{components:r})):o.createElement(m,i({ref:t},f))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,i=new Array(a);i[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:n,i[1]=l;for(var c=2;c<a;c++)i[c]=r[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,r)}p.displayName="MDXCreateElement"},18176:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var o=r(87462),n=(r(67294),r(3905));const a={sidebar_position:51},i="KB: 1051",l={unversionedId:"waf/docs/tutorials/kb-1051",id:"waf/docs/tutorials/kb-1051",title:"KB: 1051",description:"Problem Statement",source:"@site/docs/waf/docs/tutorials/kb-1051.md",sourceDirName:"waf/docs/tutorials",slug:"/waf/docs/tutorials/kb-1051",permalink:"/waf/docs/tutorials/kb-1051",draft:!1,tags:[],version:"current",sidebarPosition:51,frontMatter:{sidebar_position:51},sidebar:"wafSidebar",previous:{title:"KB: 1050",permalink:"/waf/docs/tutorials/kb-1050"},next:{title:"KB: 1052",permalink:"/waf/docs/tutorials/kb-1052"}},s={},c=[],f={toc:c};function u(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,o.Z)({},f,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"kb-1051"},"KB: 1051"),(0,n.kt)("h1",{id:"how-to-make-form-rule-to-offers-a-positive-security-model-for-application-firewall-"},"How to make form rule to offers a positive security model for Application Firewall ?"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Problem Statement")),(0,n.kt)("p",null,"Client want to Form Validation offers a positive security model of Application Firewall and allows enforcing specific values or a range of values for various form fields of a web application form."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Solution")),(0,n.kt)("p",null,"The user can make use of Haltdos WAF form rule features."),(0,n.kt)("p",null,"1.First, log into the haltdos management console"),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"kb-1051",src:r(66425).Z,width:"1822",height:"607"})),(0,n.kt)("p",null,"2.Go to Stacks > WAF > Listener > Profile > Profile default setting > Profile Rule > Form Rule > Add Rule > Save changes"),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"kb-1051",src:r(73446).Z,width:"1847",height:"951"})),(0,n.kt)("ol",{start:3},(0,n.kt)("li",{parentName:"ol"},"Open the listener in the browser.")),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"kb-1051",src:r(43826).Z,width:"1847",height:"757"})),(0,n.kt)("p",null,"As we can see that from above picture the request has been blocked because we specify values or a range of values for various form fields of a web application form also we have to check the incidents to know about the detailed information of blocked request."),(0,n.kt)("ol",{start:4},(0,n.kt)("li",{parentName:"ol"},"Go to Stacks > WAF > Incidents")),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"kb-1051",src:r(52282).Z,width:"1847",height:"324"})),(0,n.kt)("p",null,"As we can see that from above picture the content size is 145 and in form rule we configure the rule details by following values"),(0,n.kt)("p",null,"Request validation = Maximum  Body Length"),(0,n.kt)("p",null,"Value = 2 , but here we set the maximum content size by 2 that is the reason the request gets blocked.In this way we can achieve form rule."))}u.isMDXComponent=!0},73446:(e,t,r)=>{r.d(t,{Z:()=>o});const o=r.p+"assets/images/form-ff8df08c5b1a4a7cf10586116bd2e49f.png"},43826:(e,t,r)=>{r.d(t,{Z:()=>o});const o=r.p+"assets/images/formm-4b38acf4d3651ccfc12f870c4ed513f4.png"},52282:(e,t,r)=>{r.d(t,{Z:()=>o});const o=r.p+"assets/images/inci-35e2c7dffc16a4dd9a58fef325a82142.png"},66425:(e,t,r)=>{r.d(t,{Z:()=>o});const o=r.p+"assets/images/professionalconsole-00c4f5a00bd2b755e31bcab3d1a4de71.png"}}]);